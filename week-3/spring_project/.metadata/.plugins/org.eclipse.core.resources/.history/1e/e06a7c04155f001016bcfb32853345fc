@RestController
public class AuthenticationController {

    @Autowired
    private JwtUtil jwtUtil;

    @GetMapping("/authenticate")
    public Map<String, String> authenticate(@RequestHeader("Authorization") String authHeader) {
        // Decode credentials
        String[] creds = extractCredentials(authHeader);
        String username = creds[0];
        String password = creds[1];

        // Validate (ideally check against database or in-memory store)
        if (!"user".equals(username) || !"pwd".equals(password)) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, "Invalid Credentials");
        }

        // Generate JWT
        String token = jwtUtil.generateToken(username);

        return Collections.singletonMap("token", token);
    }

    private String[] extractCredentials(String header) {
        // Strip "Basic " prefix and decode base64
        String base64Credentials = header.substring("Basic ".length());
        String decoded = new String(Base64.getDecoder().decode(base64Credentials));
        return decoded.split(":", 2);
    }
}

